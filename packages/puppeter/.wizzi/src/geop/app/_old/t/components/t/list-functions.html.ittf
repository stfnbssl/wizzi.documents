$group
    $params entity,entityListTitle

    state
        @ status 'list'
        @ selectedItem null
        @ scrollTop 0
        @ scrollingElement null
        @ justRenderedList false
        @ justRenderedItem false
        [ forms
        { current
            @ status 'list'
            @ selectedItem null
            @ scrollTop 0
            @ scrollingElement null
            @ justRenderedList false
            @ depth 0
            @ title '${entityListTitle}'

    did-mount
        _ window.addEventListener('scroll', this.handlePaperScroll)
        _ this.props.onChangeCurrent(this.state.current, this.handle${entity}Close, this.handleChangeSearch)

    will-unmount
        _ window.removeEventListener('scroll', this.handlePaperScroll)

    did-update
        if this.state.current.justRenderedList
            if this.state.current.scrollingElement
                _ this.state.current.scrollingElement.scrollTo(0, this.state.current.scrollTop)
                _ this.setState
                    =>
                        param prevState
                        return
                            {
                                @ ...prevState
                                { current
                                    @ ...prevState.current
                                    @ justRenderedList false

        if this.state.current.justRenderedItem
            if this.state.current.scrollingElement
                _ this.state.current.scrollingElement.scrollTo(0, 0)
                _ this.setState
                    =>
                        param prevState
                        return
                            {
                                @ ...prevState
                                { current
                                    @ ...prevState.current
                                    @ justRenderedItem false

    => handlePaperScroll
        param ev
        if this.state.current.status == 'list'
            if ev.target.scrollingElement
                _ this.setState
                    =>
                        param prevState
                        return
                            {
                                @ ...prevState
                                { current
                                    @ ...prevState.current
                                    @ scrollTop event.target.scrollingElement.scrollTop
                                    @ scrollingElement event.target.scrollingElement

    
    => handle${entity}Close
        _ this.setState
            =>
                param prevState
                var current = prevState.forms.pop()
                if current.status == 'list'
                    set current.justRenderedList = true
                    set current.depth = prevState.forms.length
                    set current.title = '${entityListTitle}'
                    set current.selectedItem = null
                _ this.props.onChangeCurrent(current, this.handle${entity}Close, this.handleChangeSearch)
                return
                    {
                        @ ...prevState
                        @ current current
    
    => handleChangeSearch
        param ev
        var search = ev.target.value
        _ this.setState
            =>
                param prevState
                return
                    {
                        @ ...prevState
                        { current
                            @ ...prevState.current
                            @ searchText search